{"name":"WhatForensics","tagline":"WhatsApp forensics analysis and acquisition utility","body":"WhatForensics\r\n=========\r\n\r\nA C# WhatsApp acquisition and analysis tool\r\n\r\n  - Fast automatic acquisition\r\n  - View device data without running (and modifying) WhatsApp\r\n  - View extended data such as contact Jabber IDs, unsent messages and more!\r\n\r\nWhen used in combination with the iTunes backup acquisition method, files on the devices will not be modified!\r\n\r\nFeatures\r\n-----------\r\n\r\nWhatForensics uses three modes for data acquisition and analysis\r\n\r\n* Load database automatically by browsing to iTunes backup folder\r\n* Load database automatically from jailbroken iOS devices through AFC2 (may be forensically unsafe, although all operations are set as read-only)\r\n* Manually load the database from disk \r\n\r\nOnce data is loaded and successfully parsed, you can..\r\n\r\n* View extended group info, number of messages, last person who messaged within a group, and their associated push IDs\r\n* Search through data using SQLite LIKE syntax (e.g. %cheat%, %w___forensics%)\r\n* View data with a threaded format\r\n* View WhatsApp blacklist set by user\r\n* View contact names as stored on device\r\n* View unsent messages that was composed in the textfield\r\n* Export a neat HTML report!\r\n \r\n\r\nScreenshots\r\n--------------\r\n\r\nMain window with iTunes backup acquisition\r\n\r\n![Main window with iTunes backup acquisition](https://raw.github.com/jglim/WhatForensics/master/Screenshots/MainWithAcquisition.png)\r\n\r\nGroup members with blacklist\r\n\r\n![Group members with blacklist](https://raw.github.com/jglim/WhatForensics/master/Screenshots/GroupMembersWithBlacklist.png)\r\n\r\nWildcard Search\r\n\r\n![Wildcard Search](https://raw.github.com/jglim/WhatForensics/master/Screenshots/WildcardSearch.png)\r\n\r\nGenerated Report\r\n\r\n![Generated Report](https://raw.github.com/jglim/WhatForensics/master/Screenshots/GeneratedReport.png)\r\n\r\nUsage\r\n--------------\r\n\r\n1. Compile or use the prebuilt binaries\r\n2. Ensure uni.html exists within same folder (reporting format - can be modified!)\r\n3. Run (AFC2 requires iTunes to be installed)\r\n\r\nVersion\r\n-\r\n\r\n1.0.0.1\r\n\r\nLicense\r\n-\r\n\r\nMIT\r\n\r\n\r\nTODO\r\n--------------\r\n* Load data from sqlite via column names rather than indexes (compatibility)\r\n* Add more filters for the search\r\n* Sanitize search parameters\r\n* Tidy up MessageView code (especially owner highlighting)\r\n* Implement a better alternative to Manzana (to extract WA db via iTunes HouseArrest, for non-jailbroken iOS devices)\r\n* Clean up date codes\r\n* Use MiscHelper to pass connection string around instead of parameters\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}